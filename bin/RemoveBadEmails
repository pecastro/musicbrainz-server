#!/usr/bin/perl -w
# vi: set ts=4 sw=4 :
#____________________________________________________________________________
#
#   MusicBrainz -- the open internet music database
#
#   Copyright (C) 1998 Robert Kaye
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#   $Id$
#____________________________________________________________________________

use FindBin;
use lib "$FindBin::Bin/../lib";

use strict;
use DBDefs;
use MusicBrainz;
use Sql;
use UserStuff;
use integer;

@ARGV == 1 or die "Usage: $0 email-address\n";
my ($email) = @ARGV;

my $mb = MusicBrainz->new;
$mb->Login;
my $sql = Sql->new($mb->{dbh});

eval {
    $sql->Begin;

    my $users = $sql->SelectListOfLists(
        "SELECT id, name FROM moderator WHERE LOWER(email) = LOWER(?)", $email,
    );

    if (@$users)
    {
        print "Users with this email address:\n";
        printf "  #%d - %s\n", @$_ for @$users;
        print "Type 'y' to blank the email address for these users: ";
        my $ans = <STDIN>;
        chomp($ans) if defined($ans);
        if (defined($ans) and lc($ans) eq "y")
        {
                for (@$users)
                {
                        my ($id, $name) = @$_;
                        my $u = UserStuff->newFromId($mb->{dbh}, $id);
                        $u or die "User #$id not found";
                        $u->GetName eq $name or die "User #$id != $name";
                        print "Blanking email for #$id $name\n";
                        $u->SetUserInfo(email => undef);
                }
        } else {
                print "No changes made\n";
        }
    } else {
        print "No moderators with that email address\n";
    }

    $sql->Commit;
};

my $err = $@;
print("Rolling back\n"), $sql->Rollback unless $sql->{dbh}{AutoCommit};
die $err if $err;

# eof
